import React, { useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import algosdk from "algosdk";
import DonationModal from "./components/DonationModal";
import {
  Box,
  Card,
  CardMedia,
  Avatar,
  Typography,
  Button,
  Modal,
  TextField,
  IconButton,
  Checkbox,
  FormControlLabel,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TablePagination,
  TableRow,
  Paper,
  InputAdornment,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  Tabs,
  Tab,
} from "@mui/material";
import Grid from "@mui/material/Grid2";
import LinearProgress from "@mui/material/LinearProgress";
import ArrowForwardIosIcon from "@mui/icons-material/ArrowForwardIos";
import ArrowBackIosIcon from "@mui/icons-material/ArrowBackIos";
import SearchIcon from "@mui/icons-material/Search";
import LocationOnIcon from "@mui/icons-material/LocationOn";
import PhoneIcon from "@mui/icons-material/Phone";
import EmailIcon from "@mui/icons-material/Email";
import { styled } from "@mui/material/styles";
import dayjs from "dayjs";
import Slider from "react-slick"; // Th√™m th∆∞ vi·ªán Slider
import ReactMarkdown from "react-markdown";
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
} from "recharts";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import SupportersList from "./components/SupportersList";
import { getOneProjectDetail } from "network/ApiAxios";
import { ShowToastMessage } from "utils/ShowToastMessage";
// D·ªØ li·ªáu gi·∫£ l·∫≠p cho v√≠ d·ª•

const fundDescription = `
# Qu·ªπ H·ªó Tr·ª£ C·ªông ƒê·ªìng

Qu·ªπ H·ªó Tr·ª£ C·ªông ƒê·ªìng ƒë∆∞·ª£c th√†nh l·∫≠p nh·∫±m gi√∫p ƒë·ª° nh·ªØng ng∆∞·ªùi c√≥ ho√†n c·∫£nh kh√≥ khƒÉn trong x√£ h·ªôi. Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn s·ª± h·ªó tr·ª£ thi·∫øt th·ª±c v√† hi·ªáu qu·∫£ cho c√°c ƒë·ªëi t∆∞·ª£ng c·∫ßn gi√∫p ƒë·ª°.

## M·ª•c Ti√™u c·ªßa Qu·ªπ

- **H·ªó tr·ª£ t√†i ch√≠nh**: Cung c·∫•p qu·ªπ cho nh·ªØng gia ƒë√¨nh g·∫∑p kh√≥ khƒÉn.
- **Gi√°o d·ª•c**: T·∫°o ƒëi·ªÅu ki·ªán cho tr·∫ª em c√≥ ho√†n c·∫£nh kh√≥ khƒÉn ƒë∆∞·ª£c ƒë·∫øn tr∆∞·ªùng.
- **Y t·∫ø**: H·ªó tr·ª£ chi ph√≠ kh√°m ch·ªØa b·ªánh cho nh·ªØng ng∆∞·ªùi kh√¥ng c√≥ kh·∫£ nƒÉng chi tr·∫£.

![H√¨nh ·∫£nh m√¥ t·∫£ qu·ªπ](https://givenow.vn/wp-content/uploads/2024/09/Luc-Ngan-Bac-Giang-Bao-Bac-Giang.jpg)

## L·ª£i √çch Khi Tham Gia Qu·ªπ

Tham gia qu·ªπ kh√¥ng ch·ªâ gi√∫p ƒë·ª° nh·ªØng ng∆∞·ªùi c·∫ßn gi√∫p m√† c√≤n mang l·∫°i cho b·∫°n:

1. **C·∫£m gi√°c th·ªèa m√£n**: B·∫°n s·∫Ω c·∫£m th·∫•y t·ª± h√†o khi gi√∫p ƒë·ª° c·ªông ƒë·ªìng.
2. **M·∫°ng l∆∞·ªõi k·∫øt n·ªëi**: G·∫∑p g·ª° nh·ªØng ng∆∞·ªùi c√≥ c√πng m·ª•c ti√™u v√† l√Ω t∆∞·ªüng.
3. **Ch·ª©ng nh·∫≠n tham gia**: Nh·∫≠n ch·ª©ng nh·∫≠n ƒë·ªÉ c√¥ng nh·∫≠n nh·ªØng ƒë√≥ng g√≥p c·ªßa b·∫°n.

## Li√™n H·ªá

N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o ho·∫∑c mu·ªën tham gia c√πng ch√∫ng t√¥i, vui l√≤ng li√™n h·ªá:

- **Email**: support@fund.org
- **S·ªë ƒëi·ªán tho·∫°i**: 0123-456-789
- **ƒê·ªãa ch·ªâ**: 123 ƒê∆∞·ªùng ABC, Th√†nh ph·ªë XYZ
`;

// Styled components
const StyledCard = styled(Card)(({ theme }) => ({
  display: "flex",
  flexDirection: "row",
  padding: theme.spacing(2),
  height: 400, // ƒê·∫∑t chi·ªÅu cao c·ªë ƒë·ªãnh cho card
}));

const ProgressContainer = styled(Box)(({ theme }) => ({
  marginTop: theme.spacing(2),
}));

const ModalContainer = styled(Box)(({ theme }) => ({
  position: "absolute",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)",
  width: "50%",
  backgroundColor: theme.palette.background.paper,
  border: "2px solid #000",
  boxShadow: theme.shadows[5],
  padding: theme.spacing(2, 4, 3),
}));

const CustomTablePagination = styled(TablePagination)({
  backgroundColor: "#f5f5f5",
  color: "black",
  fontWeight: "bold",
  fontSize: "16px",
  textAlign: "center",
  "& .MuiToolbar-root p": {
    margin: "0", // Lo·∫°i b·ªè margin-top c·ªßa th·∫ª <p>
  },
});

const StyledBox = styled(Box)({
  backgroundColor: "#f9f9f9", // Light background to make it stand out
  borderRadius: "8px",
  padding: "20px",
  boxShadow: "0 4px 8px rgba(0, 0, 0, 0.1)", // Soft shadow for depth
});

const FundDetail = () => {
  const [open, setOpen] = useState(false);
  const [donationAmount, setDonationAmount] = useState("");
  const [anonymous, setAnonymous] = useState(false);
  const [searchQuery, setSearchQuery] = useState("");
  const [page, setPage] = useState(0);
  const [rowsPerPage, setRowsPerPage] = useState(20);
  const [tabIndex, setTabIndex] = useState(0);
  const [transactionId, setTransactionId] = useState("");
  const [sender, setSender] = useState(""); // ƒê·ªãa ch·ªâ v√≠ ng∆∞·ªùi g·ª≠i
  const [receiver, setReceiver] = useState(""); // ƒê·ªãa ch·ªâ v√≠ ng∆∞·ªùi nh·∫≠n
  const [loading, setLoading] = useState(true);
  const [projectDetail, setProjectDetail] = useState({}); // ƒê·ªãa ch·ªâ v√≠ ng∆∞·ªùi nh·∫≠n
  const [isProjectEnded, setIsProjectEnded] = useState(false);

  const handleTabChange = (event, newValue) => {
    setTabIndex(newValue);
  };

  const { prjectName, projectId } = useParams(); // L·∫•y fundName t·ª´ URL

  useEffect(() => {
    const fetchOneProjectDetail = async () => {
      try {
        setLoading(true); // Set loading to true before fetching data
        await new Promise((resolve) => setTimeout(resolve, 1000)); // Simulate loading
        const response = await getOneProjectDetail(projectId);

        const { data } = response;
        console.log("üöÄ ~ fetchOneProjectDetail ~ data:", data);
        if (data.statusCode === 200) {
          setProjectDetail(data.body || {});
          setIsProjectEnded(dayjs(data.body?.deadline).isBefore(dayjs()));

          ShowToastMessage({
            title: "Get data",
            message: "L·∫•y d·ªØ li·ªáu th√†nh c√¥ng",
            type: "success",
          });
        } else {
          ShowToastMessage({
            title: "Get data",
            message: "L·∫•y d·ªØ li·ªáu th·∫•t b·∫°i",
            type: "error",
          });
        }
      } catch (error) {
        console.log(
          "üöÄ ~ file: index.js:223 ~ fetchAllTaskQueue ~ error:",
          error
        );
      } finally {
        setLoading(false); // Set loading to false after data is fetched
      }
    };
    fetchOneProjectDetail();
  }, []);

  const handleOpen = () => setOpen(true);
  const handleClose = () => setOpen(false);
  const handleDonationChange = (e) => setDonationAmount(e.target.value);
  const handleAnonymousChange = (e) => setAnonymous(e.target.checked);
  const handleSearchChange = (e) => setSearchQuery(e.target.value);
  const handlePageChange = (event, newPage) => setPage(newPage);
  const handleRowsPerPageChange = (event) =>
    setRowsPerPage(parseInt(event.target.value, 10));
  const donationDataDaily = [
    { day: "2024-10-01", amount: 500 },
    { day: "2024-10-02", amount: 700 },
    { day: "2024-10-03", amount: 1500 },
    { day: "2024-10-04", amount: 900 },
    { day: "2024-10-05", amount: 1200 },
    { day: "2024-10-06", amount: 300 },
    { day: "2024-10-07", amount: 450 },
  ];

  const supporters = [
    { name: "Nguy·ªÖn VƒÉn A", amount: "100.000 VNƒê", time: "2024-10-01 10:00" },
    { name: "Tr·∫ßn Th·ªã B", amount: "200.000 VNƒê", time: "2024-10-02 11:30" },
    { name: "Tr·∫ßn Th·ªã B", amount: "200.000 VNƒê", time: "2024-10-02 11:30" },
    { name: "Tr·∫ßn Th·ªã B", amount: "200.000 VNƒê", time: "2024-10-02 11:30" },
    { name: "Tr·∫ßn Th·ªã B", amount: "200.000 VNƒê", time: "2024-10-02 11:30" },
    { name: "Tr·∫ßn Th·ªã B", amount: "200.000 VNƒê", time: "2024-10-02 11:30" },
    { name: "Tr·∫ßn Th·ªã B", amount: "200.000 VNƒê", time: "2024-10-02 11:30" },
    { name: "Tr·∫ßn Th·ªã B", amount: "200.000 VNƒê", time: "2024-10-02 11:30" },
    { name: "Tr·∫ßn Th·ªã B", amount: "200.000 VNƒê", time: "2024-10-02 11:30" },
    { name: "Tr·∫ßn Th·ªã B", amount: "200.000 VNƒê", time: "2024-10-02 11:30" },
    { name: "Tr·∫ßn Th·ªã B", amount: "200.000 VNƒê", time: "2024-10-02 11:30" },
    // Th√™m c√°c m·ª•c ng∆∞·ªùi ·ªßng h·ªô kh√°c
  ];

  const filteredSupporters = supporters.filter(
    (supporter) =>
      supporter.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
      supporter.amount.toLowerCase().includes(searchQuery.toLowerCase()) ||
      supporter.time.toLowerCase().includes(searchQuery.toLowerCase())
  );

  let sliderRef = React.useRef(null);
  const next = () => {
    sliderRef.slickNext();
  };
  const previous = () => {
    sliderRef.slickPrev();
  };

  const [timeRange, setTimeRange] = useState("daily"); // Default is daily view

  const handleTimeRangeChange = (event) => {
    setTimeRange(event.target.value);
  };
  const donationDataWeekly = [
    { week: "Week 1", amount: 4200 },
    { week: "Week 2", amount: 3900 },
  ];

  // D·ªØ li·ªáu m·∫´u theo th√°ng
  const donationDataMonthly = [
    { month: "October", amount: 8100 },
    { month: "November", amount: 4500 },
  ];
  // Ch·ªçn d·ªØ li·ªáu bi·ªÉu ƒë·ªì d·ª±a tr√™n kho·∫£ng th·ªùi gian
  const getChartData = () => {
    switch (timeRange) {
      case "weekly":
        return donationDataWeekly;
      case "monthly":
        return donationDataMonthly;
      default:
        return donationDataDaily;
    }
  };

  const getXAxisKey = () => {
    switch (timeRange) {
      case "weekly":
        return "week";
      case "monthly":
        return "month";
      default:
        return "day";
    }
  };
  // C·∫•u h√¨nh cho carousel
  const settings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 1, // Hi·ªÉn th·ªã 1 ·∫£nh m·ªói l·∫ßn
    slidesToScroll: 1,

    lazyLoad: true,
    appendDots: (dots) => (
      <div
        style={{
          textAlign: "center",
          zIndex: "10",
          width: "100%",
          display: "flex",
          justifyContent: "space-around",
          alignItems: "center",
          position: "absolute",
          bottom: "-32px",
        }}
      >
        <IconButton className="button" onClick={previous}>
          <ArrowBackIosIcon />
        </IconButton>

        <ul style={{ margin: "0px", padding: "0px" }}> {dots} </ul>
        <IconButton className="button" onClick={next}>
          <ArrowForwardIosIcon />
        </IconButton>
      </div>
    ),
  };

  const sendTransaction = async () => {
    try {
      const algodToken = { "X-API-Key": "Your-PureStake-API-Key" };
      const algodServer = "https://testnet-algorand.api.purestake.io/ps2";
      const algodPort = "";
      const algodClient = new algosdk.Algodv2(
        algodToken,
        algodServer,
        algodPort
      );

      const params = await algodClient.getTransactionParams().do();

      const txn = algosdk.makePaymentTxnWithSuggestedParams(
        sender, // ƒê·ªãa ch·ªâ v√≠ ng∆∞·ªùi g·ª≠i
        receiver, // ƒê·ªãa ch·ªâ v√≠ ng∆∞·ªùi nh·∫≠n
        parseInt(donationAmount) * 1000000, // Chuy·ªÉn ƒë·ªïi t·ª´ Algo sang microAlgo
        undefined,
        undefined,
        params
      );

      const senderPrivateKey = "Your-Sender-Private-Key"; // Qu·∫£n l√Ω b·∫£o m·∫≠t kh√≥a n√†y
      const signedTxn = txn.signTxn(senderPrivateKey);
      const txId = txn.txID().toString();

      await algodClient.sendRawTransaction(signedTxn).do();
      setTransactionId(txId);
      alert(`Giao d·ªãch th√†nh c√¥ng! TxID: ${txId}`);
    } catch (error) {
      console.error(error);
      alert("C√≥ l·ªói x·∫£y ra khi g·ª≠i giao d·ªãch!");
    }
  };
  return (
    <div
      style={{
        padding: "20px",
        width: "100%",
        position: "relative",
        gap: "10px",
        display: "flex",
        flexDirection: "column",
      }}
    >
      <StyledCard>
        {loading ? (
          <Typography variant="h5">Loading...</Typography>
        ) : (
          <>
            {/* B√™n tr√°i: Carousel ·∫£nh chi·∫øm 1/2 */}
            <Box sx={{ width: "50%", height: "fit-content" }}>
              <Slider
                {...settings}
                ref={(slider) => {
                  sliderRef = slider;
                }}
              >
                {projectDetail?.linkcardImage.length > 0 &&
                  projectDetail?.linkcardImage.map((src, index) => (
                    <CardMedia
                      key={index}
                      component="img"
                      image={src}
                      alt={`Image ${index + 1}`}
                      sx={{ width: "100%", height: "auto", borderRadius: 2 }}
                    />
                  ))}
              </Slider>
            </Box>

            {/* B√™n ph·∫£i: UI control chi·∫øm 1/2 */}
            <Box sx={{ width: "50%", paddingLeft: 2 }}>
              <StyledBox sx={{ width: "100%", margin: "auto", padding: 3 }}>
                {/* Nh√≥m 1 */}
                <Typography
                  variant="h5"
                  gutterBottom
                  mb={2}
                  sx={{ fontWeight: "bold" }}
                >
                  {projectDetail?.name || prjectName}
                </Typography>

                <Grid
                  container
                  spacing={2}
                  sx={{ display: "flex", justifyContent: "space-between" }}
                >
                  {/* Avatar and Fund Name */}
                  <Grid item xs={8} container alignItems="center" space={0}>
                    <Avatar
                      alt="Qu·ªπ"
                      src={
                        projectDetail?.logo ||
                        "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcCeoLmM1J-XCZGPTXuOguB7hGsmsvdvjkVQ&s"
                      }
                      sx={{
                        width: 40,
                        height: 40,
                        flexShrink: 0,
                      }}
                    />
                    <Box sx={{ flex: 1 }}>
                      <Typography
                        variant="h7"
                        sx={{
                          wordWrap: "break-word",
                          textWrap: "pretty",
                          fontWeight: "600",
                          lineHeight: "1.2", // Adjust line height for readability
                        }}
                      >
                        {projectDetail?.fund_name ?? "T·ªï Ch·ª©c G√¢y Qu·ªπ"}
                      </Typography>
                    </Box>
                  </Grid>

                  {/* Number of Supporters */}
                  <Grid
                    item
                    xs={4}
                    display="flex"
                    justifyContent="flex-end"
                    alignItems="center"
                  >
                    <Typography variant="body2" sx={{ fontWeight: "500" }}>
                      {`${projectDetail?.fund_raise_count || 1} l∆∞·ª£t ·ªßng h·ªô`}
                    </Typography>
                  </Grid>
                </Grid>

                {/* Nh√≥m 2: Progress Bar and Donation Details */}
                <ProgressContainer>
                  {/* Target Amount */}
                  <Box
                    sx={{
                      display: "flex",
                      justifyContent: "space-between",
                      marginBottom: "5px",
                    }}
                  >
                    <Typography variant="body1" sx={{ fontWeight: "500" }}>
                      S·ªë ti·ªÅn m·ª•c ti√™u:
                    </Typography>
                    <Typography variant="body1" sx={{ fontWeight: "500" }}>
                      {`${formatAmount(
                        projectDetail?.fund_raise_total ?? "0"
                      )} VND`}
                    </Typography>
                  </Box>

                  {/* Progress Bar */}
                  <LinearProgress
                    variant="determinate"
                    value={50}
                    sx={{
                      height: "12px",
                      borderRadius: "5px",
                      marginBottom: "10px",
                    }}
                  />

                  <Box
                    sx={{
                      display: "flex",
                      justifyContent: "space-between",
                      marginBottom: "5px",
                    }}
                  >
                    <Typography variant="body1" sx={{ fontWeight: "500" }}>
                      ƒê√£ quy√™n g√≥p:
                    </Typography>
                    <Typography variant="body1" sx={{ fontWeight: "500" }}>
                      {`${formatAmount(
                        projectDetail?.current_fund ?? "0"
                      )} VND`}
                    </Typography>
                  </Box>

                  {/* Amount Raised */}

                  {/* Fundraising Deadline */}
                  <Typography
                    variant="body1"
                    sx={{
                      mt: 1,
                      fontWeight: "500",
                      color: isProjectEnded ? "red" : "inherit",
                    }}
                  >
                    {isProjectEnded
                      ? "D·ª± √°n ƒë√£ k·∫øt th√∫c!"
                      : `Ng√†y k·∫øt th√∫c: ${dayjs(projectDetail?.deadline).format(
                          "DD/MM/YYYY"
                        )}`}
                  </Typography>
                </ProgressContainer>

                {/* Nh√≥m 3: Donation Button */}
                <Box sx={{ marginTop: 3, textAlign: "center" }}>
                  <Button
                    variant="contained"
                    color="primary"
                    onClick={handleOpen}
                    sx={{ padding: "10px 20px" }}
                  >
                    ·ª¶ng H·ªô
                  </Button>
                </Box>
              </StyledBox>
            </Box>
          </>
        )}
      </StyledCard>
      <Card style={{ padding: "20px 5px 5px 5px" }}>
        <Tabs
          value={tabIndex}
          onChange={handleTabChange}
          aria-label="fund tabs"
        >
          <Tab
            label={
              <span
                style={{
                  fontWeight: "bold",
                  fontSize: "1.1rem",
                  textTransform: "none",
                }}
              >
                M√¥ T·∫£
              </span>
            }
          />
          <Tab
            label={
              <span
                style={{
                  fontWeight: "bold",
                  fontSize: "1.1rem",
                  textTransform: "none",
                }}
              >
                Ng∆∞·ªùi ·ª¶ng H·ªô
              </span>
            }
          />
        </Tabs>
        {loading ? (
          <Typography variant="h5">Loading...</Typography>
        ) : (
          <>
            {tabIndex === 0 && (
              <Box sx={{ display: "flex", marginTop: 2, padding: "5px" }}>
                <Box sx={{ width: "70%", paddingRight: 2 }}>
                  <Typography variant="body1">
                    {/* Chuy·ªÉn ƒë·ªïi n·ªôi dung Markdown th√†nh HTML */}
                    <ReactMarkdown
                      components={{
                        img: ({ node, ...props }) => (
                          // eslint-disable-next-line jsx-a11y/alt-text
                          <img
                            {...props}
                            style={{
                              maxWidth: "100%", // ƒê·∫£m b·∫£o ·∫£nh kh√¥ng tr√†n ra ngo√†i
                              height: "auto", // Gi·ªØ t·ª∑ l·ªá c·ªßa ·∫£nh
                            }}
                          />
                        ),
                      }}
                    >
                      {projectDetail?.description ?? "# No description"}
                    </ReactMarkdown>
                  </Typography>
                </Box>
                <Box sx={{ width: "30%" }}>
                  <Typography
                    variant="h5"
                    mb={2}
                    color="green"
                    sx={{ fontWeight: "bold", fontFamily: "Arial, sans-serif" }}
                  >
                    Th√¥ng tin qu·ªπ
                  </Typography>
                  <Box sx={{ display: "flex", alignItems: "center" }}>
                    <Avatar
                      alt="Qu·ªπ"
                      src={
                        projectDetail?.logo ||
                        "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcCeoLmM1J-XCZGPTXuOguB7hGsmsvdvjkVQ&s"
                      }
                      sx={{ width: 56, height: 56, flexShrink: 0 }}
                    />
                    <Typography
                      variant="h6"
                      ml={2}
                      mb={2}
                      mt={2}
                      sx={{ wordWrap: "break-word" }}
                    >
                      {projectDetail?.fundName ?? "T·ªï Ch·ª©c G√¢y Qu·ªπ"}
                    </Typography>
                  </Box>
                  <Typography
                    variant="body2"
                    mt={1}
                    p={1}
                    sx={{ fontStyle: "italic", fontSize: "1rem" }}
                  >
                    ‚Äú{projectDetail?.fund_description ?? "M√¥ t·∫£ th√¥ng tin qu·ªπ"}‚Äù
                  </Typography>
                  <Typography variant="body2" mt={1} mb={2}>
                    <LocationOnIcon
                      fontSize="small"
                      sx={{ verticalAlign: "middle", mr: 0.5 }}
                    />
                    {`ƒê·ªãa ch·ªâ: ${
                      projectDetail?.fundAdress ?? "ƒê·ªãa ch·ªâ T·ªï ch·ª©c qu·ªπ"
                    }`}
                  </Typography>
                  <Typography variant="body2" mt={1} mb={2}>
                    <PhoneIcon
                      fontSize="small"
                      sx={{ verticalAlign: "middle", mr: 0.5 }}
                    />
                    {`Hotline: ${
                      projectDetail?.hotline ?? "S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá"
                    }`}
                  </Typography>
                  <Typography variant="body2" mt={1} mb={2}>
                    <EmailIcon
                      fontSize="small"
                      sx={{ verticalAlign: "middle", mr: 0.5 }}
                    />
                    {`Email: ${projectDetail?.email ?? "Email li√™n h·ªá"}`}
                  </Typography>
                </Box>
              </Box>
            )}
            {tabIndex === 1 && (
              <SupportersList />
              // <Box sx={{ marginTop: "1rem" }}>
              //   <Box sx={{ width: "50%", paddingLeft: 2 }}>
              //     <TextField
              //       label="T√¨m ki·∫øm ng∆∞·ªùi ·ªßng h·ªô"
              //       variant="outlined"
              //       fullWidth
              //       value={searchQuery}
              //       onChange={handleSearchChange}
              //       InputProps={{
              //         startAdornment: (
              //           <InputAdornment position="start">
              //             <SearchIcon />
              //           </InputAdornment>
              //         ),
              //       }}
              //     />
              //   </Box>

              //   {/* B·∫£ng */}
              //   <TableContainer component={Paper} sx={{ marginTop: 2 }}>
              //     <Table>
              //       <TableHead>
              //         <TableRow>
              //           {["Ng∆∞·ªùi ·ªßng h·ªô", "S·ªë ti·ªÅn", "Th·ªùi gian"].map(
              //             (header, index) => (
              //               <TableCell
              //                 key={index}
              //                 sx={{
              //                   backgroundColor: "#f5f5f5",
              //                   color: "black",
              //                   fontWeight: "bold",
              //                   fontSize: "16px",
              //                 }}
              //               >
              //                 {header}
              //               </TableCell>
              //             )
              //           )}
              //         </TableRow>
              //       </TableHead>
              //       <TableBody>
              //         {filteredSupporters
              //           .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
              //           .map((supporter, index) => (
              //             <TableRow key={index}>
              //               <TableCell>{supporter.name}</TableCell>
              //               <TableCell>{supporter.amount}</TableCell>
              //               <TableCell>{supporter.time}</TableCell>
              //             </TableRow>
              //           ))}
              //       </TableBody>
              //     </Table>

              //     {/* Ph√¢n trang */}
              //     <CustomTablePagination
              //       component="div"
              //       count={filteredSupporters.length}
              //       page={page}
              //       onPageChange={handlePageChange}
              //       rowsPerPage={rowsPerPage}
              //       onRowsPerPageChange={handleRowsPerPageChange}
              //       rowsPerPageOptions={[10, 20, 50]}
              //       labelRowsPerPage="S·ªë d√≤ng m·ªói trang:"
              //       labelDisplayedRows={({ from, to, count }) => {
              //         return `Hi·ªÉn th·ªã ${from}-${to} c·ªßa ${
              //           count !== -1 ? count : `nhi·ªÅu h∆°n ${to}`
              //         }`;
              //       }}
              //     />
              //   </TableContainer>
              //   {/* Bi·ªÉu ƒë·ªì t·ªïng s·ªë ti·ªÅn n·∫°p m·ªói ng√†y */}
              //   <Box sx={{ marginTop: 4 }}>
              //     <FormControl sx={{ marginBottom: 2, minWidth: 120 }}>
              //       <InputLabel id="time-range-label">Kho·∫£ng th·ªùi gian</InputLabel>
              //       <Select
              //         labelId="time-range-label"
              //         value={timeRange}
              //         onChange={handleTimeRangeChange}
              //         label="Kho·∫£ng th·ªùi gian"
              //       >
              //         <MenuItem value="daily">Ng√†y</MenuItem>
              //         <MenuItem value="weekly">Tu·∫ßn</MenuItem>
              //         <MenuItem value="monthly">Th√°ng</MenuItem>
              //       </Select>
              //     </FormControl>
              //     <Typography variant="h6" sx={{ marginBottom: 2 }}>
              //       Bi·ªÉu ƒë·ªì t·ªïng s·ªë ti·ªÅn n·∫°p
              //     </Typography>
              //     <ResponsiveContainer width="100%" height={300}>
              //       <BarChart
              //         data={getChartData()}
              //         margin={{ top: 5, right: 30, left: 20, bottom: 5 }}
              //       >
              //         <CartesianGrid strokeDasharray="3 3" />
              //         <XAxis dataKey={getXAxisKey()} />
              //         <YAxis />
              //         <Tooltip />
              //         <Bar dataKey="amount" fill="#8884d8" />
              //       </BarChart>
              //     </ResponsiveContainer>
              //   </Box>
              // </Box>
            )}
          </>
        )}
      </Card>
      {/* Modal ƒë·ªÉ nh·∫≠p th√¥ng tin ng∆∞·ªùi d√πng */}
      <DonationModal
        open={open}
        handleClose={handleClose}
        sendTransaction={sendTransaction}
        donationAmount={donationAmount}
        setDonationAmount={setDonationAmount}
        anonymous={anonymous}
        handleAnonymousChange={handleAnonymousChange}
      />
      {transactionId && (
        <div>
          <p>Giao d·ªãch th√†nh c√¥ng v·ªõi TxID: {transactionId}</p>
        </div>
      )}
    </div>
  );
};

export default FundDetail;
const formatAmount = (amount) => {
  return new Intl.NumberFormat("vi-VN", { style: "decimal" }).format(amount);
};
